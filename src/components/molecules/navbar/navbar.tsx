"use client";

import styles from './navbar.module.scss';
import Icon from '@/components/atoms/icons';
import AvatarBtn from '@/components/atoms/avatarbtn/avatarbtn';
import Navigator from '@/app/(main)/navigator/navigator';
import { usePathname } from 'next/navigation';
import Link from 'next/link';
import { motion, Variants } from 'framer-motion';

// Routes where stagger animation should be applied
const STAGGER_ROUTES = ['/'];

// Checks if current path requires staggered animation
const isStaggeredRoute = (pathname: string): boolean => STAGGER_ROUTES.includes(pathname);

// Slide-down animation for individual items
const slideDownVariant: Variants = {
  initial: { opacity: 0, y: -20 },
  animate: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.4,
      ease: [0.785, 0.135, 0.15, 0.86],
    },
  },
};

// Parent variant for stagger effect
const parentStaggerVariant: Variants = {
  initial: {},
  animate: {
    transition: {
      staggerChildren: 0.2,
    },
  },
};

export default function NavBar() {
  const pathname = usePathname();
  const useStagger = isStaggeredRoute(pathname);

  const Logo = (
    <Link href="/">
      {/* <Icon name="oto" size={54} /> */}
      {/* 
      <svg height="24" viewBox="0 0 41 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.615 8.92642C11.615 11.3951 11.1857 13.3654 10.327 14.8374C9.39168 16.4474 8.03468 17.2524 6.25601 17.2524C4.47735 17.2524 3.12035 16.4474 2.18501 14.8374C1.34168 13.3961 0.920013 11.4411 0.920013 8.97242C0.920013 6.50376 1.34935 4.53342 2.20801 3.06142C3.14335 1.45142 4.50801 0.646422 6.30201 0.646422C8.08068 0.646422 9.43001 1.45142 10.35 3.06142C11.1933 4.50276 11.615 6.45776 11.615 8.92642ZM8.67101 8.97242C8.67101 5.33842 7.86601 3.52142 6.25601 3.52142C4.66135 3.52142 3.86401 5.32309 3.86401 8.92642C3.86401 12.5604 4.67668 14.3774 6.30201 14.3774C7.88135 14.3774 8.67101 12.5758 8.67101 8.97242Z" fill="white" />
        <path d="M19.7092 5.29242L18.9272 7.93742C18.4366 7.53876 17.9076 7.33942 17.3402 7.33942C16.6502 7.33942 16.0675 7.68442 15.5922 8.37442V16.9994H12.8782V4.92442H15.5922V5.75242C16.2209 5.03176 16.9569 4.67142 17.8002 4.67142C18.5056 4.67142 19.1419 4.87842 19.7092 5.29242Z" fill="white" />
        <path d="M28.8921 10.9504C28.8921 12.8824 28.6008 14.3928 28.0181 15.4814C27.3741 16.6621 26.4158 17.2524 25.1431 17.2524C24.3305 17.2524 23.6328 16.9458 23.0501 16.3324V16.9994H20.3361V1.58942L23.0501 0.232422V5.75242C23.7248 5.03176 24.4991 4.67142 25.3731 4.67142C27.7191 4.67142 28.8921 6.76442 28.8921 10.9504ZM26.1321 11.0424C26.1321 9.66242 26.0325 8.68109 25.8331 8.09842C25.6338 7.50042 25.2658 7.20142 24.7291 7.20142C24.0545 7.20142 23.4948 7.53876 23.0501 8.21342V13.6874C23.5255 14.3774 24.1005 14.7224 24.7751 14.7224C25.2658 14.7224 25.6108 14.4541 25.8101 13.9174C26.0248 13.3808 26.1321 12.4224 26.1321 11.0424Z" fill="white" />
        <path d="M33.2821 2.02642C33.2821 2.50176 33.1134 2.90809 32.7761 3.24542C32.4388 3.58275 32.0324 3.75142 31.5571 3.75142C31.0818 3.75142 30.6754 3.58275 30.3381 3.24542C30.0008 2.90809 29.8321 2.50176 29.8321 2.02642C29.8321 1.55109 30.0008 1.14475 30.3381 0.807421C30.6754 0.470089 31.0818 0.301422 31.5571 0.301422C32.0324 0.301422 32.4388 0.470089 32.7761 0.807421C33.1134 1.14475 33.2821 1.55109 33.2821 2.02642ZM32.9141 16.9994H30.2001V4.92442H32.9141V16.9994Z" fill="white" />
        <path d="M40.7636 14.1014L40.4416 16.7234C39.7822 17.0761 39.0922 17.2524 38.3716 17.2524C36.4242 17.2524 35.4506 16.0181 35.4506 13.5494V7.50042H33.9556V4.92442H35.4506V1.58942L38.1646 0.232422V4.92442H40.6026V7.50042H38.1646V13.4804C38.1646 14.2778 38.4942 14.6764 39.1536 14.6764C39.7056 14.6764 40.2422 14.4848 40.7636 14.1014Z" fill="white" />
      </svg> */}



      <svg height="24" viewBox="0 0 39 19" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M6.21 18.207C5.474 18.207 4.784 17.9923 4.14 17.563C3.496 17.1183 2.92867 16.5127 2.438 15.746C1.96267 14.9793 1.587 14.0823 1.311 13.055C1.05033 12.0123 0.92 10.893 0.92 9.697C0.92 8.501 1.05033 7.38933 1.311 6.362C1.587 5.33467 1.96267 4.43767 2.438 3.671C2.92867 2.889 3.496 2.28333 4.14 1.854C4.784 1.42467 5.474 1.21 6.21 1.21C6.946 1.21 7.62833 1.42467 8.257 1.854C8.901 2.28333 9.46833 2.889 9.959 3.671C10.4497 4.43767 10.8253 5.33467 11.086 6.362C11.362 7.38933 11.5 8.501 11.5 9.697C11.5 10.893 11.362 12.0123 11.086 13.055C10.8253 14.0823 10.4497 14.9793 9.959 15.746C9.46833 16.5127 8.901 17.1183 8.257 17.563C7.62833 17.9923 6.946 18.207 6.21 18.207ZM6.21 17.586C7.29867 17.586 8.14967 16.9343 8.763 15.631C9.37633 14.3277 9.683 12.3497 9.683 9.697C9.683 7.04433 9.37633 5.074 8.763 3.786C8.14967 2.48267 7.29867 1.831 6.21 1.831C5.13667 1.831 4.28567 2.48267 3.657 3.786C3.04367 5.074 2.737 7.04433 2.737 9.697C2.737 12.3497 3.04367 14.3277 3.657 15.631C4.28567 16.9343 5.13667 17.586 6.21 17.586ZM15.5029 7.742C16.1316 6.66867 16.8906 6.132 17.7799 6.132C18.2859 6.132 18.6616 6.28533 18.9069 6.592C19.1522 6.88333 19.2749 7.213 19.2749 7.581C19.2749 7.87233 19.1982 8.11 19.0449 8.294C18.9069 8.478 18.6846 8.57 18.3779 8.57C18.1326 8.57 17.9486 8.51633 17.8259 8.409C17.7186 8.28633 17.6266 8.14833 17.5499 7.995C17.4886 7.84167 17.4119 7.71133 17.3199 7.604C17.2279 7.48133 17.0746 7.42 16.8599 7.42C16.5839 7.42 16.3232 7.58867 16.0779 7.926C15.8326 8.248 15.6256 8.685 15.4569 9.237C15.3036 9.789 15.2269 10.4177 15.2269 11.123V16.459C15.2269 16.781 15.2729 17.011 15.3649 17.149C15.4722 17.287 15.6869 17.3713 16.0089 17.402L16.6299 17.471C16.7986 17.5017 16.8829 17.586 16.8829 17.724C16.8829 17.908 16.7679 18 16.5379 18H12.6509C12.4209 18 12.3059 17.9157 12.3059 17.747C12.3059 17.609 12.4056 17.517 12.6049 17.471L12.8809 17.425C13.2029 17.3637 13.4099 17.2717 13.5019 17.149C13.6092 17.011 13.6629 16.781 13.6629 16.459V8.731C13.6629 8.455 13.6169 8.271 13.5249 8.179C13.4482 8.07167 13.3026 8.00267 13.0879 7.972L12.6049 7.903C12.4056 7.88767 12.3059 7.80333 12.3059 7.65C12.3059 7.52733 12.4286 7.443 12.6739 7.397C13.1492 7.32033 13.5096 7.19767 13.7549 7.029C14.0156 6.86033 14.2839 6.65333 14.5599 6.408C14.6979 6.27 14.8129 6.201 14.9049 6.201C15.0429 6.201 15.1119 6.293 15.1119 6.477V7.719C15.1119 7.82633 15.1579 7.89533 15.2499 7.926C15.3419 7.94133 15.4262 7.88 15.5029 7.742ZM23.5612 18.207C22.9325 18.207 22.3268 18.0077 21.7442 17.609C21.4068 17.379 21.1002 17.4403 20.8242 17.793C20.6708 17.9617 20.5558 18.069 20.4792 18.115C20.4025 18.1763 20.3258 18.207 20.2492 18.207C20.0805 18.207 20.0192 18.0997 20.0652 17.885C20.1265 17.5323 20.1725 17.08 20.2032 16.528C20.2338 15.976 20.2492 15.24 20.2492 14.32V3.28C20.2492 3.004 20.2032 2.82 20.1112 2.728C20.0345 2.62067 19.8888 2.55167 19.6742 2.521L19.1912 2.452C19.0225 2.42133 18.9382 2.32933 18.9382 2.176C18.9382 2.02267 19.0225 1.93067 19.1912 1.9C19.6205 1.808 19.9808 1.70067 20.2722 1.578C20.5635 1.45533 20.8088 1.33267 21.0082 1.21C21.2535 1.05667 21.4375 0.98 21.5602 0.98C21.7288 0.98 21.8132 1.10267 21.8132 1.348V7.029C21.8132 7.15167 21.8592 7.236 21.9512 7.282C22.0585 7.31267 22.1735 7.26667 22.2962 7.144C22.9555 6.46933 23.6762 6.132 24.4582 6.132C25.1635 6.132 25.7845 6.36967 26.3212 6.845C26.8732 7.305 27.3025 7.949 27.6092 8.777C27.9312 9.605 28.0922 10.5787 28.0922 11.698C28.0922 12.9707 27.8928 14.0977 27.4942 15.079C27.0955 16.0603 26.5512 16.827 25.8612 17.379C25.1865 17.931 24.4198 18.207 23.5612 18.207ZM23.5152 17.632C24.3738 17.632 25.0638 17.126 25.5852 16.114C26.1218 15.102 26.3902 13.7373 26.3902 12.02C26.3902 10.4407 26.1602 9.237 25.7002 8.409C25.2402 7.581 24.5885 7.167 23.7452 7.167C23.2238 7.167 22.7715 7.38167 22.3882 7.811C22.0048 8.24033 21.8132 8.83833 21.8132 9.605V15.401C21.8132 16.091 21.9665 16.6353 22.2732 17.034C22.5952 17.4327 23.0092 17.632 23.5152 17.632ZM31.1824 4.085C30.8604 4.085 30.5844 3.97 30.3544 3.74C30.1398 3.51 30.0324 3.21867 30.0324 2.866C30.0324 2.51333 30.1398 2.22967 30.3544 2.015C30.5844 1.785 30.8604 1.67 31.1824 1.67C31.5044 1.67 31.7728 1.785 31.9874 2.015C32.2021 2.22967 32.3094 2.51333 32.3094 2.866C32.3094 3.21867 32.2021 3.51 31.9874 3.74C31.7728 3.97 31.5044 4.085 31.1824 4.085ZM29.2504 18C29.0204 18 28.9054 17.9157 28.9054 17.747C28.9054 17.609 29.0051 17.517 29.2044 17.471L29.4804 17.425C29.8638 17.3637 30.1091 17.2717 30.2164 17.149C30.3238 17.011 30.3774 16.781 30.3774 16.459V8.731C30.3774 8.455 30.3314 8.271 30.2394 8.179C30.1628 8.07167 30.0171 8.00267 29.8024 7.972L29.3194 7.903C29.1201 7.88767 29.0204 7.80333 29.0204 7.65C29.0204 7.52733 29.1431 7.443 29.3884 7.397C29.8638 7.32033 30.2471 7.19767 30.5384 7.029C30.8298 6.86033 31.1134 6.65333 31.3894 6.408C31.5274 6.27 31.6424 6.201 31.7344 6.201C31.8724 6.201 31.9414 6.293 31.9414 6.477V16.459C31.9414 16.781 31.9874 17.011 32.0794 17.149C32.1714 17.287 32.3478 17.3713 32.6084 17.402L33.1834 17.471C33.3521 17.5017 33.4364 17.586 33.4364 17.724C33.4364 17.908 33.3214 18 33.0914 18H29.2504ZM36.6025 18.207C36.0659 18.207 35.6212 18.023 35.2685 17.655C34.9312 17.2717 34.7625 16.6507 34.7625 15.792V7.19C34.7625 7.006 34.6705 6.914 34.4865 6.914H33.8195C33.5742 6.914 33.4515 6.822 33.4515 6.638C33.4515 6.51533 33.5205 6.408 33.6585 6.316C34.1645 5.96333 34.5709 5.58767 34.8775 5.189C35.1842 4.775 35.4525 4.21533 35.6825 3.51C35.7899 3.188 35.9202 3.027 36.0735 3.027C36.2422 3.027 36.3265 3.14967 36.3265 3.395V5.948C36.3265 6.16267 36.4339 6.27 36.6485 6.27H38.1435C38.3889 6.27 38.5115 6.37733 38.5115 6.592C38.5115 6.80667 38.3889 6.914 38.1435 6.914H36.6485C36.4339 6.914 36.3265 7.02133 36.3265 7.236V15.815C36.3265 16.1523 36.3802 16.4207 36.4875 16.62C36.5949 16.804 36.7942 16.896 37.0855 16.896C37.4075 16.896 37.6682 16.735 37.8675 16.413C38.0822 16.091 38.2202 15.5697 38.2815 14.849C38.3122 14.6343 38.4119 14.527 38.5805 14.527C38.7645 14.527 38.8565 14.642 38.8565 14.872C38.8105 16.0527 38.5652 16.9037 38.1205 17.425C37.6912 17.9463 37.1852 18.207 36.6025 18.207Z" fill="white" />
      </svg>



    </Link>
  );

  const NavItems = useStagger ? (
    <motion.div
      className={styles.navitems}
      variants={parentStaggerVariant}
      initial="initial"
      animate="animate"
      style={{ display: 'flex', flexDirection: 'row', gap: '1.6rem' }}
    >
      <motion.div variants={slideDownVariant}>
        <Navigator />
      </motion.div>
      <motion.div variants={slideDownVariant}>
        <AvatarBtn />
      </motion.div>
    </motion.div>
  ) : (
    <div style={{ display: 'flex', flexDirection: 'row', gap: '1.6rem' }}>
      <Navigator />
      <AvatarBtn />
    </div>
  );

  return (
    <nav className={styles.navbarwraper}>
      <div className={styles.navbarcontainer}>
        {Logo}
        {NavItems}
      </div>
    </nav>
  );
}
